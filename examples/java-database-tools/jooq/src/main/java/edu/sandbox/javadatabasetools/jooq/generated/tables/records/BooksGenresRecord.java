/*
 * This file is generated by jOOQ.
 */
package edu.sandbox.javadatabasetools.jooq.generated.tables.records;


import edu.sandbox.javadatabasetools.jooq.generated.tables.BooksGenres;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class BooksGenresRecord extends UpdatableRecordImpl<BooksGenresRecord> implements Record3<Long, Long, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.books_genres.id</code>.
     */
    public BooksGenresRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.books_genres.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.books_genres.book_id</code>.
     */
    public BooksGenresRecord setBookId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.books_genres.book_id</code>.
     */
    public Long getBookId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.books_genres.genre_id</code>.
     */
    public BooksGenresRecord setGenreId(Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.books_genres.genre_id</code>.
     */
    public Long getGenreId() {
        return (Long) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, Long, Long> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Long, Long, Long> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return BooksGenres.BOOKS_GENRES.ID;
    }

    @Override
    public Field<Long> field2() {
        return BooksGenres.BOOKS_GENRES.BOOK_ID;
    }

    @Override
    public Field<Long> field3() {
        return BooksGenres.BOOKS_GENRES.GENRE_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getBookId();
    }

    @Override
    public Long component3() {
        return getGenreId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getBookId();
    }

    @Override
    public Long value3() {
        return getGenreId();
    }

    @Override
    public BooksGenresRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public BooksGenresRecord value2(Long value) {
        setBookId(value);
        return this;
    }

    @Override
    public BooksGenresRecord value3(Long value) {
        setGenreId(value);
        return this;
    }

    @Override
    public BooksGenresRecord values(Long value1, Long value2, Long value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BooksGenresRecord
     */
    public BooksGenresRecord() {
        super(BooksGenres.BOOKS_GENRES);
    }

    /**
     * Create a detached, initialised BooksGenresRecord
     */
    public BooksGenresRecord(Long id, Long bookId, Long genreId) {
        super(BooksGenres.BOOKS_GENRES);

        setId(id);
        setBookId(bookId);
        setGenreId(genreId);
    }

    /**
     * Create a detached, initialised BooksGenresRecord
     */
    public BooksGenresRecord(edu.sandbox.javadatabasetools.jooq.generated.tables.pojos.BooksGenres value) {
        super(BooksGenres.BOOKS_GENRES);

        if (value != null) {
            setId(value.getId());
            setBookId(value.getBookId());
            setGenreId(value.getGenreId());
        }
    }
}
