/*
 * This file is generated by jOOQ.
 */
package edu.sandbox.javadatabasetools.jooq.generated.tables.daos;


import edu.sandbox.javadatabasetools.jooq.generated.tables.Comment;
import edu.sandbox.javadatabasetools.jooq.generated.tables.records.CommentRecord;
import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import java.util.List;
import java.util.Optional;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
@Repository
public class CommentDao extends DAOImpl<CommentRecord, edu.sandbox.javadatabasetools.jooq.generated.tables.pojos.Comment, Long> {

    /**
     * Create a new CommentsDao without any configuration
     */
    public CommentDao() {
        super(Comment.COMMENT, edu.sandbox.javadatabasetools.jooq.generated.tables.pojos.Comment.class);
    }

    /**
     * Create a new CommentsDao with an attached configuration
     */
    @Autowired
    public CommentDao(Configuration configuration) {
        super(Comment.COMMENT, edu.sandbox.javadatabasetools.jooq.generated.tables.pojos.Comment.class, configuration);
    }

    @Override
    public Long getId(edu.sandbox.javadatabasetools.jooq.generated.tables.pojos.Comment object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<edu.sandbox.javadatabasetools.jooq.generated.tables.pojos.Comment> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Comment.COMMENT.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<edu.sandbox.javadatabasetools.jooq.generated.tables.pojos.Comment> fetchById(Long... values) {
        return fetch(Comment.COMMENT.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public edu.sandbox.javadatabasetools.jooq.generated.tables.pojos.Comment fetchOneById(Long value) {
        return fetchOne(Comment.COMMENT.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<edu.sandbox.javadatabasetools.jooq.generated.tables.pojos.Comment> fetchOptionalById(Long value) {
        return fetchOptional(Comment.COMMENT.ID, value);
    }

    /**
     * Fetch records that have <code>book_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<edu.sandbox.javadatabasetools.jooq.generated.tables.pojos.Comment> fetchRangeOfBookId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Comment.COMMENT.BOOK_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>book_id IN (values)</code>
     */
    public List<edu.sandbox.javadatabasetools.jooq.generated.tables.pojos.Comment> fetchByBookId(Long... values) {
        return fetch(Comment.COMMENT.BOOK_ID, values);
    }

    /**
     * Fetch records that have <code>text BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<edu.sandbox.javadatabasetools.jooq.generated.tables.pojos.Comment> fetchRangeOfText(String lowerInclusive, String upperInclusive) {
        return fetchRange(Comment.COMMENT.TEXT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>text IN (values)</code>
     */
    public List<edu.sandbox.javadatabasetools.jooq.generated.tables.pojos.Comment> fetchByText(String... values) {
        return fetch(Comment.COMMENT.TEXT, values);
    }
}
