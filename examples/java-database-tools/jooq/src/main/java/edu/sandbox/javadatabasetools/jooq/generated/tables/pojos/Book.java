/*
 * This file is generated by jOOQ.
 */
package edu.sandbox.javadatabasetools.jooq.generated.tables.pojos;


import lombok.Data;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;


@Data
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class Book implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long id;
    private String title;
    private Long authorId;
    private Author author;
    private List<Comment> comments = new ArrayList<>();
    private List<Genre> genres = new ArrayList<>();

    public Book() {
    }

    public Book(Book value) {
        this.id = value.id;
        this.title = value.title;
        this.authorId = value.authorId;
    }

    public Book(
            Long id,
            String title,
            Long authorId
    ) {
        this.id = id;
        this.title = title;
        this.authorId = authorId;
    }

    public void setGenres(List<Genre> genres) {
        this.genres = genres.stream()
                .filter(genre -> genre.getBookId().equals(id))
                .collect(Collectors.toList());
    }

    public void setComments(List<Comment> comments) {
        this.comments = comments.stream()
                .filter(comment -> comment.getBookId().equals(id))
                .collect(Collectors.toList());
    }

    public void addComment(Comment comment) {
        comments.add(comment);
    }

    public void addGenre(Genre genre) {
        genres.add(genre);
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Book other = (Book) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        } else if (!this.id.equals(other.id))
            return false;
        if (this.title == null) {
            if (other.title != null)
                return false;
        } else if (!this.title.equals(other.title))
            return false;
        if (this.authorId == null) {
            if (other.authorId != null)
                return false;
        } else if (!this.authorId.equals(other.authorId))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.title == null) ? 0 : this.title.hashCode());
        result = prime * result + ((this.authorId == null) ? 0 : this.authorId.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Books (");

        sb.append(id);
        sb.append(", ").append(title);
        sb.append(", ").append(authorId);

        sb.append(")");
        return sb.toString();
    }
}
