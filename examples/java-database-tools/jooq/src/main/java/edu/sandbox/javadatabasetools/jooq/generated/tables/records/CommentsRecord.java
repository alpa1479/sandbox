/*
 * This file is generated by jOOQ.
 */
package edu.sandbox.javadatabasetools.jooq.generated.tables.records;


import edu.sandbox.javadatabasetools.jooq.generated.tables.Comments;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class CommentsRecord extends UpdatableRecordImpl<CommentsRecord> implements Record3<Long, Long, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.comments.id</code>.
     */
    public CommentsRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.comments.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.comments.book_id</code>.
     */
    public CommentsRecord setBookId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.comments.book_id</code>.
     */
    public Long getBookId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.comments.text</code>.
     */
    public CommentsRecord setText(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.comments.text</code>.
     */
    public String getText() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, Long, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Long, Long, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Comments.COMMENTS.ID;
    }

    @Override
    public Field<Long> field2() {
        return Comments.COMMENTS.BOOK_ID;
    }

    @Override
    public Field<String> field3() {
        return Comments.COMMENTS.TEXT;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getBookId();
    }

    @Override
    public String component3() {
        return getText();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getBookId();
    }

    @Override
    public String value3() {
        return getText();
    }

    @Override
    public CommentsRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public CommentsRecord value2(Long value) {
        setBookId(value);
        return this;
    }

    @Override
    public CommentsRecord value3(String value) {
        setText(value);
        return this;
    }

    @Override
    public CommentsRecord values(Long value1, Long value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CommentsRecord
     */
    public CommentsRecord() {
        super(Comments.COMMENTS);
    }

    /**
     * Create a detached, initialised CommentsRecord
     */
    public CommentsRecord(Long id, Long bookId, String text) {
        super(Comments.COMMENTS);

        setId(id);
        setBookId(bookId);
        setText(text);
    }

    /**
     * Create a detached, initialised CommentsRecord
     */
    public CommentsRecord(edu.sandbox.javadatabasetools.jooq.generated.tables.pojos.Comments value) {
        super(Comments.COMMENTS);

        if (value != null) {
            setId(value.getId());
            setBookId(value.getBookId());
            setText(value.getText());
        }
    }
}
